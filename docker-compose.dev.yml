
services:
  crud_postgres:
    image: postgres:13.1-alpine
    container_name: crud_postgres
    volumes:
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
         - POSTGRES_PASSWORD=sua-senha
         - POSTGRES_USER=postgres
         - POSTGRES_DB=crud_springboot
    networks:
      - crud-network-dev
    
  crud_springboot:
    image: crud_springboot:0.1
    build:
      context: ./crud
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://crud_postgres:5432/crud_springboot
    depends_on:
      - crud_postgres
    container_name: crud_springboot
    expose:
      - 8080
    ports:
      - 8080:8080
    networks:
      - crud-network-dev
    
  crud_frontend_angular:
    image: crud_frontend_angular:0.1
    build:
      context: ./frontend-angular-produtos-v14
      dockerfile: Dockerfile.dev
    container_name: crud_frontend_angular
    volumes:
      - ./frontend-angular-produtos-v14:/app
      - /app/node_modules
    depends_on:
      - crud_springboot
    expose:
      - 4200
    ports:
      - 4200:4200
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
    working_dir: /app
    command: npm run start -- --host 0.0.0.0 --port 4200 --disable-host-check
    networks:
      - crud-network-dev
    
volumes:
  postgres-data:
  
networks:
  crud-network-dev:
    driver: bridge
    
# docker compose -f docker-compose.dev.yml up --build -d
